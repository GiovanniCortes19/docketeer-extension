version: '3.8'

services:
  # The extenions UI/Backend
  remake-docketeer:
    image: ${DESKTOP_PLUGIN_IMAGE}
    container_name: remake-docketeer
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - docketeer-prometheus-files:/prometheus
      - docketeer-grafana-files:/grafana
      - docketeer-postgres-db:/postgres
    ports:
      - 4000:4000

  # Scrapes all the container metrics, cAdvisor will be deprecated at May 15, 2024 so this will need to be replaced at some point
  # https://console.cloud.google.com/gcr/images/cadvisor/GLOBAL/cadvisor
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
      - 8080:8080
    volumes:
      - /:/rootfs:ro
      - /var/run/docker.sock:/var/run/docker.sock:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /etc/machine-id:/etc/machine-id:ro
    networks:
      - monitoring

  # Collects additional metrics that are then sent to prometheus 
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    ports:
      - 9100:9100
    volumes:
      #system info for linux machines
      - /proc:/host/proc:ro
      # also for linux
      - /sys:/host/sys:ro
      #root
      - /:/rootfs:ro
    command:
      - --path.procfs=/host/proc
      - --path.rootfs=/rootfs
      - --path.sysfs=/host/sys
      - --collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)
    networks:
      - monitoring

  # Collects metrics and makes them available at localhost:9090
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    ports:
      - 9090:9090
    volumes:
      - docketeer-prometheus-files:/etc/prometheus
      - docketeer-prometheus-data:/prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    networks:
      - monitoring
    depends_on:
      - node-exporter
      - cadvisor

  # Displays metrics gathered from containers at localhost:2999
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - 2999:3000
    volumes:
      - docketeer-grafana-files:/etc/grafana
    environment:
      GF_PATHS_CONFIG: /etc/grafana/grafana.ini
    depends_on:
      - prometheus


networks:
  monitoring:
    driver: bridge

volumes:
  docketeer-prometheus-data: {}
  docketeer-prometheus-files:
  docketeer-grafana-files:
  docketeer-postgres-db:

  # db:
  #   image: postgres:latest
  #   container_name: docketeerdb
  #   ports:
  #     - 5432:5432
  #   volumes:
  #     - docketeer-postgres-db:/postgres
  #   environment:
  #     POSTGRES_DB: 'docketeer-db'
  #     POSTGRES_USER: 'postgres'
  #     POSTGRES_PASSWORD: 'postgres'